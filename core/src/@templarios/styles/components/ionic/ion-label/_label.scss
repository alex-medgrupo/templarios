ion-label {
  color: hsl(var(--med-color-neutral-10));
  font-weight: 400;
  font-size: 16px;
  line-height: 20px;

  @each $type-value, $type in $tp-type {
    &[token='#{$type-value}'] {
      @each $property, $value in $type {
        #{$property}: #{$value};
      }
    }
  }
}

//
// ion-textarea, ion-input, ion-select, tp-input-container
//
ion-label ~ ion-textarea.sc-ion-textarea-md-h,
ion-label ~ ion-input.sc-ion-input-md-h,
ion-label ~ ion-select,
ion-label ~ .sc-tp-input-container-h {
  margin-top: 8px;
}

//
// color
//
@each $color in $tp-color {
  @for $i from 1 through 5 {
    @include generate-component-color(ion-label, $color, $i) {
      color: #{tp-color($color, $i)};
    }
  }
}

//
// neutral
//
@for $i from 1 through 10 {
  @include generate-component-neutral(ion-label, neutral-#{$i}, $i) {
    color: #{tp-neutral($i)};
  }
}
@for $i from 1 through 9 {
  @include generate-component-neutral(ion-label, neutral-#{$i}#{5}, $i) {
    color: #{tp-neutral($i, 5)};
  }
}

//
// feedback
//
@each $color in $tp-feedback {
  @include generate-component-feedback(ion-label, fb-#{$color}, $color) {
    color: #{tp-feedback($color)};
  }
}
